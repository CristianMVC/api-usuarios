<?php

namespace ApiV1Bundle\Repository;
use ApiV1Bundle\Entity\Usuario;

/**
 * UsuarioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsuarioRepository extends ApiRepository
{
    /**
     * @return \Doctrine\ORM\EntityRepository
     */
    private function getRepository()
    {
        return $this->getEntityManager()->getRepository('ApiV1Bundle:Usuario');
    }

    /**
     * @param $rolId
     * @param $id
     * @return mixed|null|object
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findByRol($rolId, $id)
    {
        if ($rolId == Usuario::ROL_AGENTE) {
            return $this->findByUserId($id);
        }

        return $this->find($id);
    }

    /**
     * busca un usuario en SNU  por user_id
     * @param integer $userId id de usuario en snt o snc
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findByUserIdRolId($userId,$rolId)
    {
        $query = $this->getRepository()->createQueryBuilder('u');
        $query->where('u.userId = :userId')->setParameter('userId', $userId);
        $query->andWhere('u.rol = :rol')->setParameter('rol', $rolId);
        return $query->getQuery()->getOneOrNullResult();
    }

    /**
     * busca un usuario en SNU  por user_id
     * @param integer $userId id de usuario en snt o snc
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findByUserId($userId)
    {
        $query = $this->getRepository()->createQueryBuilder('u');
        $query->where('u.userId = :userId')->setParameter('userId', $userId);
        return $query->getQuery()->getOneOrNullResult();
    }

    /**
     * busca un usuario en SNU por username
     * @param string $username username del usuario
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findByUsername($username)
    {
        $query = $this->getRepository()->createQueryBuilder('u');
        $query->where('u.username = :username')->setParameter('username', $username);
        return $query->getQuery()->getOneOrNullResult();
    }

}
